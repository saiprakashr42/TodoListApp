{"version":3,"sources":["firebase.js","Todo.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Todo","props","classes","useState","open","setOpen","input","setInput","Modal","onClose","e","className","placeholder","todo","value","onChange","event","target","Button","onClick","collection","doc","id","set","merge","List","ListItem","ListItemAvatar","ListItemText","primary","secondary","variant","cursor","color","delete","App","todos","setTodos","useEffect","orderBy","onSnapshot","snapshot","docs","map","data","FormControl","InputLabel","Input","type","disabled","preventDefault","add","timestamp","FieldValue","serverTimestamp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e86e455.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\nconst firebaseApp = firebase.initializeApp({\r\n\r\n    apiKey: \"AIzaSyBVnWR8sHeTLIKmIl5TlVHUOoNnr59fli0\",\r\n    authDomain: \"todolist-a650d.firebaseapp.com\",\r\n    projectId: \"todolist-a650d\",\r\n    storageBucket: \"todolist-a650d.appspot.com\",\r\n    messagingSenderId: \"864342397802\",\r\n    appId: \"1:864342397802:web:ddc24055a3150c6fd44b13\",\r\n    measurementId: \"G-WB3TJLFRM7\"\r\n\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\n\r\nexport default db;\r\n","import { Button, List, ListItem, ListItemAvatar, ListItemText, Modal } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport db from './firebase';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\n\r\nfunction Todo(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n    const [input, setInput] = useState();\r\n\r\n\r\n    const updateTodo = () => {\r\n        //update the todo with new input\r\n        db.collection('todos').doc(props.todo.id).set({\r\n            todo: input\r\n        }, { merge: true });\r\n\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                open={open}\r\n                onClose={e => setOpen(false)}\r\n            >\r\n                <div className={classes.paper}>\r\n                    <h1>Welcome to update Your Activity...</h1>\r\n                    <input\r\n                        placeholder={props.todo.todo}\r\n                        value={input}\r\n                        onChange={event => setInput(event.target.value)} />\r\n                    <Button onClick={updateTodo}>Update</Button>\r\n                </div>\r\n            </Modal>\r\n\r\n\r\n            <List className=\"todo_list\">\r\n                <ListItem>\r\n                    <ListItemAvatar>\r\n\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary={props.todo.todo} secondary=\"Deadlinee.....\" />\r\n                </ListItem>\r\n                <Button variant=\"outlined\" onClick={e => setOpen(true)}>Edit</Button>\r\n                <Button cursor=\"pointer\" color=\"primary\" variant=\"outlined\" onClick={event => db.collection('todos').doc(props.todo.id).delete()}>DELETE ME</Button>\r\n\r\n            </List>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo;\r\n","import React, { useState, useEffect } from 'react';\nimport { Button, FormControl, Input, InputLabel } from '@material-ui/core';\nimport './App.css';\nimport Todo from './Todo';\nimport db from './firebase';\nimport firebase from \"firebase\";\n\n\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [input, setInput] = useState('');\n\n\n  useEffect(() => {\n    db.collection('todos').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n      setTodos(snapshot.docs.map(doc => ({ id: doc.id, todo: doc.data().todo })))\n    })\n  }, []);\n\n\n\n  const addTodo = (event) => {\n    event.preventDefault();\n\n    db.collection('todos').add({\n      todo: input,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n    setInput('');\n  }\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <form >\n          <h1>Todo List App using React</h1>\n          <FormControl >\n\n            <InputLabel >Write a goodTodo</InputLabel>\n            <Input type=\"text\"\n              placeholder=\"ENter....\"\n              value={input}\n              onChange={event => setInput(event.target.value)}\n            />\n          </FormControl>\n\n          <Button disabled={!input} type=\"submit\" onClick={addTodo} variant=\"contained\" color=\"primary\" >\n            Add\n      </Button>\n        </form>\n\n        <ul>\n          {todos.map(todo => (\n\n            <Todo todo={todo} />\n\n          ))}\n        </ul>\n      </div>\n\n    </div >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}